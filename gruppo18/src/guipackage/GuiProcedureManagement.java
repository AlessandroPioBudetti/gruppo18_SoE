/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guipackage;

import java.awt.Desktop;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.net.URL;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import tablepackage.TableProcedure;

/**
 *
 * @author ALEX
 */
public class GuiProcedureManagement extends javax.swing.JFrame {
    Statement st;
    TableProcedure proced;
    public GuiProcedureManagement(Statement st) {
        initComponents();
        this.st = st;
        proced = new TableProcedure(st);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jNameField = new javax.swing.JTextField();
        jUrlField = new javax.swing.JTextField();
        jInsert = new javax.swing.JButton();
        jDelete = new javax.swing.JButton();
        jUpdate = new javax.swing.JButton();
        jVisualize = new javax.swing.JButton();
        jMenu = new javax.swing.JButton();
        jInfo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListProcedure = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Procedure Management");

        jLabel1.setText("Name");

        jLabel2.setText("URL");

        jNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNameFieldActionPerformed(evt);
            }
        });

        jUrlField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jUrlFieldMouseClicked(evt);
            }
        });
        jUrlField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUrlFieldActionPerformed(evt);
            }
        });

        jInsert.setText("INSERT");
        jInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInsertActionPerformed(evt);
            }
        });

        jDelete.setText("DELETE");
        jDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteActionPerformed(evt);
            }
        });

        jUpdate.setText("UPDATE");
        jUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateActionPerformed(evt);
            }
        });

        jVisualize.setText("VISUALIZE");
        jVisualize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jVisualizeActionPerformed(evt);
            }
        });

        jMenu.setText("Menu");
        jMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuActionPerformed(evt);
            }
        });

        jInfo.setText("INFO");
        jInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInfoActionPerformed(evt);
            }
        });

        jListProcedure.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListProcedureMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListProcedure);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepackage/1f4c1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jInsert)
                            .addComponent(jMenu))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDelete)
                                .addGap(38, 38, 38)
                                .addComponent(jUpdate)
                                .addGap(34, 34, 34)
                                .addComponent(jVisualize))
                            .addComponent(jInfo)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jNameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                    .addComponent(jUrlField, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(38, 38, 38)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jMenu)
                            .addComponent(jInfo))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jUrlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jInsert)
                    .addComponent(jDelete)
                    .addComponent(jUpdate)
                    .addComponent(jVisualize))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jUrlFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUrlFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jUrlFieldActionPerformed

    private void jNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNameFieldActionPerformed

    private void jInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInsertActionPerformed
        if(jNameField.getText().isEmpty() || jUrlField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Insert all fields.");
        }
        else{
            String name = jNameField.getText().trim();
            String url = jUrlField.getText().trim();
            inserimentoProcedura(name,url);
            jNameField.setText("");
            jUrlField.setText("");
            
        }
    }//GEN-LAST:event_jInsertActionPerformed

    private void jInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInfoActionPerformed
        JOptionPane.showMessageDialog(null, "Remember. To be able to insert a new procedure, the URL relating to the Google Drive(or another service) shared folder must be entered in the URL field.","Insert_Procedure", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jInfoActionPerformed

    private void jMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jMenuActionPerformed

    private void jVisualizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jVisualizeActionPerformed
        jNameField.setText("");
        jUrlField.setText("");
        visualizzaListaProcedure();
        
    }//GEN-LAST:event_jVisualizeActionPerformed
    String nameSelected;
    String urlSelected;
    private void jListProcedureMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListProcedureMouseClicked
        nameSelected = jListProcedure.getSelectedValue();
        jNameField.setText(nameSelected);
        urlSelected = proced.getUrl(nameSelected);
        jUrlField.setText(urlSelected);
        
    }//GEN-LAST:event_jListProcedureMouseClicked

    private void jDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteActionPerformed
        
        
        if(jNameField.getText().isEmpty() || jUrlField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please select an item from the list first.");
        }
        else{
            String name = jNameField.getText().trim();
            deleteProcedure(name);
            jNameField.setText("");
            jUrlField.setText("");
            visualizzaListaProcedure();
        }
        
    }//GEN-LAST:event_jDeleteActionPerformed

    private void jUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateActionPerformed
        
        
        
        if(jNameField.getText().isEmpty() || jUrlField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Please select an item from the list first");
            visualizzaListaProcedure();
        }
        else{
            String newname = jNameField.getText();
            String url = jUrlField.getText();
            if(newname.equals(nameSelected) && url.equals(urlSelected)){
                JOptionPane.showMessageDialog(null,"No update maded.");
                jNameField.setText("");
                jUrlField.setText("");
                
            }
            else{
                updateProcedura(newname,url,nameSelected);
                visualizzaListaProcedure();
            }
        }
           
    }//GEN-LAST:event_jUpdateActionPerformed

    private void jUrlFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jUrlFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jUrlFieldMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String url = jUrlField.getText();
        try {
            Desktop.getDesktop().browse(new URL(url).toURI());
            //La classe Desktop ha un costruttore privato, e per questo viene istanziato tramite il suo metodo static sync getDestkop().
            //Una volta istanziato l'oggetto, possiamo chiamare la funzione browse che ci permette di lanciare il nostro browser di default.
            //Il metodo browse vuole un oggetto di tipo URI, ottenibile grazie al metodo toURI di URL.
            // new URL(url) prende la stringa e la converte in URL e se fallisce lancia l'eccezione MalformedURLException.
            // il metodo toURI (Uniform Resource Identifier) converte il corrispettivo URL in URI e lancia, se fallisce, l'eccezione URISyntaxException.
        } catch (MalformedURLException ex) {
            //by new URL(url) - Questa eccezione è lanciata se non viene specificato alcun protocollo, o viene trovato un protocollo sconosciuto o la specifica(url nel nostro caso) è nulla 
            Logger.getLogger(GuiProcedureManagement.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Unspecified or incorrect protocol or missing URL.","Malformed",JOptionPane.ERROR_MESSAGE);
        } catch (URISyntaxException ex) {
            //by toURI() - Questa eccezione è lanciata nel caso in cui l'URL non è formattato rigorosamente secondo RFC2396 e non può essere convertito in un URI.
            Logger.getLogger(GuiProcedureManagement.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"URL not formatted correctly according to RFC2396","URISyntax.",JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            //by browse() - Lancia un eccezione se il browser di default non è stato trovato o ha fallito nel lanciare il browser stesso.
            Logger.getLogger(GuiProcedureManagement.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Default browser not found or browser launch failed.","BrowserError",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void inserimentoProcedura(String name, String url){
       
        if(proced.insertProcedure(name, url) == true){
            JOptionPane.showMessageDialog(null, "Successful insertion");
            }
        else{
            JOptionPane.showMessageDialog(null, "Ops,something went wrong?");
            }
    }
    
    private void updateProcedura(String newname,String url, String oldname){
        
        if(proced.updateProcedure(newname, url, oldname))
            JOptionPane.showMessageDialog(null,"Successful update");
        else
            JOptionPane.showMessageDialog(null, "Ops,something went wrong?");
    }
    
    private void visualizzaListaProcedure() {
        
            String[] procedure;
            procedure = proced.visualizeProcedure();
            jListProcedure.setListData(procedure);
    }
    
    private void deleteProcedure(String name){
        
        
        if(proced.deleteProcedure(name) == true){
            JOptionPane.showMessageDialog(null, "Successful deletion");
            }
        else{
            JOptionPane.showMessageDialog(null, "Ops,something went wrong?");
            }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiProcedureManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiProcedureManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiProcedureManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiProcedureManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new GuiProcedureManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jDelete;
    private javax.swing.JButton jInfo;
    private javax.swing.JButton jInsert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jListProcedure;
    private javax.swing.JButton jMenu;
    private javax.swing.JTextField jNameField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jUpdate;
    private javax.swing.JTextField jUrlField;
    private javax.swing.JButton jVisualize;
    // End of variables declaration//GEN-END:variables
}
